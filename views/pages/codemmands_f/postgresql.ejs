<!DOCTYPE html>
<!--  This site was created in Webflow. http://www.webflow.com  -->
<!--  Last Published: Mon Apr 22 2019 15:55:05 GMT+0000 (UTC)  -->
<html data-wf-page="5cbdc332ef4522126b929060" data-wf-site="5ca985147177dc87e3d2f4c6">
<head>
  <meta charset="utf-8">
  <title>Commands-sheat</title>
  <meta content="Incredible is a template, that combines a minimal modern design with the right amount of features to help you create an outstanding web for your business in no time." name="description">
  <meta content="Commands-sheat" property="og:title">
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <meta content="Webflow" name="generator">
  
   <% include ../../partials/header.ejs %>
   
</head>
<body class="natbody">
	
   <% include ../../partials/nav.ejs %>
   
  <div class="w-row">
    <div class="w-col w-col-3">
      <h1 class="heading-25">Menu:</h1>
      <ul>
        <% include ../../partials/codemmandsmenu.ejs %>
      </ul>
    </div>
    <div class="column-12 w-col w-col-9">
      <h1 class="heading-26">PostgreSQL</h1>
	  <div class="text-block-18">This is mainly PostgreSQL, NODEJS & Express</div>
	  <div style="margin-bottom: 55px;" id="spacer"></div>
	  
      <div class="code-snippet">
        <h1 class="codecomment">//PostgreSQL Docs</h1>
        <a href="https://www.postgresql.org/docs/current/tutorial-sql-intro.html" style="text-decoration: none;"><p class="paragraph-8">Click here for the official: Tutorial SQL Intro</p></a>
      </div>
	  
	  
      <div class="code-snippet">
        <h1 class="codecomment">//ADD TABLE</h1>
        <p class="paragraph-8">
			CREATE TABLE weather (</br>
    city            varchar(80),</br>
    temp_lo         int,           -- low temperature</br>
    temp_hi         int,           -- high temperature</br>
    prcp            real,          -- precipitation</br>
    date            date</br>
				);
		</p>
      </div>
	  
	  
      <div class="code-snippet">
        <h1 class="codecomment">//SHOW TABLES in the Console</h1>
        <p class="paragraph-8">/d</p>
      </div>
	  
	  
      <div class="code-snippet">
        <h1 class="codecomment">//PostgreSQL DESCRIBE TABLE in console</h1>
        <p class="paragraph-8">/d table_name</p>
      </div>
	  
	  
      <div class="code-snippet">
        <h1 class="codecomment">//To drop a column of a table, you use the DROP COLUMN clause in the ALTER TABLE statement as follows:</h1>
        <p class="paragraph-8">
			ALTER TABLE table_name </br>
			DROP COLUMN column_name;
		</p>
      </div>
      <div class="code-snippet">
        <h1 class="codecomment">
			//Insert a single row into table distributors, returning the sequence number generated by the DEFAULT clause:</h1>
        <p class="paragraph-8">
			INSERT INTO usrs (username, email) VALUES ('suigeneris', 'theemail@email.com');</br>
   		 	RETURNING did;
		</p>
      </div>
	  
      <div class="code-snippet">
        <h1 class="codecomment">//SIMPLE DATA BASE QUERY AND CONSOLE LOG</h1>
        <p class="paragraph-8">
		dbName.query('SELECT * FROM ColumnName', (err, res) => {</br>
 		 	if (err) throw err;</br>
  		 for (let row of res.rows) {</br>
   		  console.log(JSON.stringify(row));</br>
  	  			}</br>
  			dbName.end();</br>
				});</p>
				
				<p class="comments">If you want to get data from multiple columns, use a comma to separate the columns. You use an asterisk (*) to query data from all columns</p>
      </div>
	   
      <div class="code-snippet">
        <h1 class="codecomment">
		//STORES DATA STORED IN VARIABLES NODE.JS format </h1>
        <p class="paragraph-8">
	    	theVault.query('INSERT INTO tableName (column1, column2) VALUES ($1, $2)', [var1, var2], (error, results) => {</br>
	      	  if (error) {</br>
	       	   throw error</br>
	     	 		}</br>
	      		  res.status(201)</br>
	    			})
		</p>
      </div>
	  
	  
	  
      <div class="code-snippet">
        <h1 class="codecomment">
		//QUERY COLUMN IN TABLE DATABASE WHERE THE COLUMN IS EQUAL TO A VARIABLE </h1>
        <p class="paragraph-8">
			DataBase.query('SELECT Column FROM Table WHERE column = $1', [variable], (err, res) => {</br>
				  console.log(res.rows)</br>
			})
		</p>
		<p class="comments">The completed basic POST function (getting the data from a form with POST method) on a node.js express server looks like this</p>
		<p class="paragraph-8">
			.post('/urlwhereformisPOSTING',function(req,res){</br>
				const variable = req.body.input1; //form input </br>
		</br>
				DataBase.query('SELECT Column FROM Table WHERE column = $1', [variable], (err, res) => {</br>
		  		  console.log(res.rows) //</br>
				})</br>
			</p>
			
			<p class="comments">Any operation can be used. to compare more columns and variables use commas:</p>
				<p class="paragraph-8">
			SELECT column1, column2 FROM TABLE_NAME WHERE column1 = $1 AND column2 = $2
				</p>
			
      </div>
	  
	  
	  
	  
	  
	  
    </div>
  </div>
  <div class="footer-cheatsheet">
    <h1 class="heading-27">Code-CheatSheet</h1>
  </div>
  <script src="https://d1tdp7z6w94jbb.cloudfront.net/js/jquery-3.3.1.min.js" type="text/javascript" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
  <script src="js/webflow.js" type="text/javascript"></script>
  <!-- [if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif] -->
</body>
</html>